<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>HuskyDoge&#39;s World</title>
        <link>http://example.org/</link>
        <description>This is my cool site</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>hbh001098hbh@sjtu.edu.cn (HuskyDoge)</managingEditor>
            <webMaster>hbh001098hbh@sjtu.edu.cn (HuskyDoge)</webMaster><copyright>All Mine</copyright><lastBuildDate>Wed, 06 Jul 2022 17:17:42 &#43;0800</lastBuildDate>
            <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>C&#43;&#43; 字符指针</title>
    <link>http://example.org/posts/cpp%E5%AD%97%E7%AC%A6%E6%8C%87%E9%92%88/</link>
    <pubDate>Wed, 06 Jul 2022 17:17:42 &#43;0800</pubDate>
    <author>HuskyDoge</author>
    <guid>http://example.org/posts/cpp%E5%AD%97%E7%AC%A6%E6%8C%87%E9%92%88/</guid>
    <description><![CDATA[#include &lt;iostream&gt; #include &lt;cstring&gt; using namespace std; // 写出两个函数的声明 char *&amp;funA(char **&amp;p); char *funB(char b[], char **p); int main() { char a[100], b[100]; for(int i = 0; i &lt; 3; ++i) { char **p; cin &gt;&gt; a; // 1. funA(p)作为左值，需要加引用&amp; //]]></description>
</item>
<item>
    <title>C&#43;&#43; 字符研究</title>
    <link>http://example.org/posts/cpp%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
    <pubDate>Wed, 06 Jul 2022 17:17:42 &#43;0800</pubDate>
    <author>HuskyDoge</author>
    <guid>http://example.org/posts/cpp%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
    <description><![CDATA[c++字符/字符串输入函数： ​ 注：程序运行后键盘输入会首先存储到输入缓冲区中，遇到结束符时终止输入（一般为回车）。 cin &gt;&gt; s cin从输入缓冲区中]]></description>
</item>
<item>
    <title>Git</title>
    <link>http://example.org/posts/git/</link>
    <pubDate>Wed, 06 Jul 2022 17:17:42 &#43;0800</pubDate>
    <author>HuskyDoge</author>
    <guid>http://example.org/posts/git/</guid>
    <description><![CDATA[git init: 在当前目录下生成一个 git 仓库 git init dir_name: 使用指定目录作为Git仓库 设置提交代码时的用户信息： $ git config --global user.name &#34;runoob&#34; $ git config --global user.email test@runoob.com 基本操作 git add 添加文件到暂存区]]></description>
</item>
<item>
    <title>Shell</title>
    <link>http://example.org/posts/shell/</link>
    <pubDate>Wed, 06 Jul 2022 17:17:42 &#43;0800</pubDate>
    <author>HuskyDoge</author>
    <guid>http://example.org/posts/shell/</guid>
    <description><![CDATA[echo + text pwd: 当前路径 cd .:当前目录 cd ..:上级目录 cd /：根目录 ls -l:显示文件的详细信息 rm -rf:用强制权限删除，避免烦人的提醒信息 mv: mv命令将]]></description>
</item>
<item>
    <title>Vscode快捷键</title>
    <link>http://example.org/posts/vscode%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
    <pubDate>Wed, 06 Jul 2022 17:17:42 &#43;0800</pubDate>
    <author>HuskyDoge</author>
    <guid>http://example.org/posts/vscode%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
    <description><![CDATA[<p><strong>&ldquo;有用的快捷键&rdquo;</strong></p>]]></description>
</item>
<item>
    <title>性能分析</title>
    <link>http://example.org/posts/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</link>
    <pubDate>Wed, 06 Jul 2022 17:17:42 &#43;0800</pubDate>
    <author>HuskyDoge</author>
    <guid>http://example.org/posts/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</guid>
    <description><![CDATA[性能分析 Timing usr sys: 在cpu里跑的时间 wall-Clock：所有进程花费的时间， 包括用户输入 time 指令 + 文件地址 Memory htop Glances 网络参数 shell 中输入 ifconfig 比较命令行指令]]></description>
</item>
<item>
    <title>Hello</title>
    <link>http://example.org/posts/hello/</link>
    <pubDate>Wed, 06 Jul 2022 15:55:33 &#43;0800</pubDate>
    <author>HuskyDoge</author>
    <guid>http://example.org/posts/hello/</guid>
    <description><![CDATA[<p><strong>&ldquo;My First Blog&rdquo;</strong></p>]]></description>
</item>
<item>
    <title>ML Learning</title>
    <link>http://example.org/posts/ml_note/</link>
    <pubDate>Wed, 06 Jul 2022 15:55:33 &#43;0800</pubDate>
    <author>HuskyDoge</author>
    <guid>http://example.org/posts/ml_note/</guid>
    <description><![CDATA[Types of Machine Learning Systems Whether or not they are trained with human supervision supervised unsupervised semisupervised （半监督） Reinforcement Learning Whether or not they can learn incrementally on the fly online learning batch learning Whether they work by simply comparing new data points to known data points, or instead detect patterns in the training data and build a predictive model, much like scientists do instance-based model-based]]></description>
</item>
<item>
    <title>Vim</title>
    <link>http://example.org/posts/vim/</link>
    <pubDate>Wed, 06 Jul 2022 15:55:33 &#43;0800</pubDate>
    <author>HuskyDoge</author>
    <guid>http://example.org/posts/vim/</guid>
    <description><![CDATA[]]></description>
</item>
<item>
    <title>健身笔记</title>
    <link>http://example.org/posts/%E5%81%A5%E8%BA%AB%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Wed, 06 Jul 2022 15:55:33 &#43;0800</pubDate>
    <author>HuskyDoge</author>
    <guid>http://example.org/posts/%E5%81%A5%E8%BA%AB%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[饮食 黄金时间： ​ 运动后30分钟内摄入蛋白质最佳 热身 静态拉伸 ​ 静态拉伸就是把自己的身体摆放到关节活动度极限位置附近，然后保持这个动作持续10-]]></description>
</item>
</channel>
</rss>
